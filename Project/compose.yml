version: "3.9" # not required
services:
  api:
    build:
      context: ./Server
    container_name: api
    ports:
      - 127.0.0.1:2999:80
    depends_on:
      - elasticsearch
    healthcheck:
          test: ["CMD", "wget", "http://localhost:80/health"]
          interval: 5s
  
  elasticsearch: # service name (also used as host name)
    image: elasticsearch:7.17.6
    env_file:
      - env/elasticsearch.env
    environment: # (see https://www.elastic.co/guide/en/elasticsearch/reference/7.17/docker.html)
      - discovery.type=single-node # single-node cluster
      - bootstrap.memory_lock=true # disable swapping
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true # enable security/basic authentication
      - node.name=es01
      - cluster.name=es-docker-single-cluster
      # required for the elasticvue UI (see https://elasticvue.com/usage)
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:8080
      - http.cors.allow-headers=X-Requested-With,Content-Type,Content-Length,Authorization
    ulimits:
      memlock: # disables swapping (see https://www.elastic.co/guide/en/elasticsearch/reference/7.17/docker.html)
        soft: -1
        hard: -1
    volumes:
      - german_rap_project:/usr/share/elasticsearch/data # persist elasticsearch data
    ports:
      - "9200:9200" # make port 9200 accessible for the host


  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    env_file:
      - env/kibana.env
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  webapp:
    build:
      context: ./Client
    container_name: webapp
    volumes:
      - type: bind
        source: ./webapp/src
        target: /usr/src/webapp/src
      - type: bind
        source: ./webapp/static
        target: /usr/src/webapp/static
    ports:
      - 127.0.0.1:3000:3000
    links:
      - api

volumes:
  german_rap_project: # use default volume settings
    driver: local
